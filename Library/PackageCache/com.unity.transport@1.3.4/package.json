{
  "name": "com.unity.transport",
  "displayName": "Unity Transport",
  "version": "1.3.4",
  "unity": "2020.3",
  "unityRelease": "0f1",
  "description": "Unity network transport layer - the low-level interface for sending UDP data",
  "dependencies": {
    "com.unity.collections": "1.2.4",
    "com.unity.burst": "1.6.6",
    "com.unity.mathematics": "1.2.6"
  },
  "_upm": {
    "changelog": "### Fixes\n* Fixed an issue where the reliable pipeline stage could end up writing past the end of its internal buffer and thrashing the buffers of other connections. This could result in packet corruption, but would most likely result in erroneous -7 (`NetworkDriverParallelForErr`) errors being reported when calling `EndSend`.\n* Fixed an issue where upon returning -7 (`NetworkDriverParallelForErr`), `EndSend` would leak the send handle. Over time, this would result in less send handles being available, resulting in more -5 (`NetworkSendQueueFull`) errors.\n* If nothing is received from a Unity Relay server for a while, the transport will now attempt to rebind to it. This should improve the accuracy of `GetRelayConnectionStatus` in scenarios where the Relay allocation times out while communications with the server are out."
  },
  "upmCi": {
    "footprint": "77cfea86fd01638c603a80494dac4e1a07173d8d"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.transport@1.3/manual/index.html",
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/com.unity.transport.git",
    "type": "git",
    "revision": "5e7f04b9ae40d63aeda6d97eab9d86e86fa40d3b"
  },
  "samples": [
    {
      "displayName": "Custom Network Interface",
      "description": "Shows how to build a custom network interface using the INetworkInterface API",
      "path": "Samples~/CustomNetworkInterface"
    },
    {
      "displayName": "Ping/Pong Sample",
      "description": "Several samples on the basics of jobs, mainthread setups using the Unity Transport",
      "path": "Samples~/Ping"
    },
    {
      "displayName": "Pipelines Sample",
      "description": "Shows how to use Pipeline stages",
      "path": "Samples~/Pipeline"
    },
    {
      "displayName": "Unity Relay with Unity Transport",
      "description": "Basic sample on how to use Unity Relay with Unity Transport, your project must depend on com.unity.services.relay",
      "path": "Samples~/RelayPing"
    },
    {
      "displayName": "Soak Sample",
      "description": "Shows how to use pipelines and jobs to gather stats and create traffic using Unity Transport",
      "path": "Samples~/Soaker"
    }
  ]
}
