//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.Lobbies.Http;



namespace Unity.Services.Lobbies.Models
{
    /// <summary>
    /// The body of a QuickJoin request.
    /// </summary>
    [Preserve]
    [DataContract(Name = "QuickJoinRequest")]
    public class QuickJoinRequest
    {
        /// <summary>
        /// The body of a QuickJoin request.
        /// </summary>
        /// <param name="filter">A list of filters which can be used to narrow down which lobbies to attempt to join.</param>
        /// <param name="player">player param</param>
        [Preserve]
        public QuickJoinRequest(List<QueryFilter> filter = default, Player player = default)
        {
            Filter = filter;
            Player = player;
        }

        /// <summary>
        /// A list of filters which can be used to narrow down which lobbies to attempt to join.
        /// </summary>
        [Preserve]
        [DataMember(Name = "filter", EmitDefaultValue = false)]
        public List<QueryFilter> Filter{ get; }
        
        /// <summary>
        /// Parameter player of QuickJoinRequest
        /// </summary>
        [Preserve]
        [DataMember(Name = "player", EmitDefaultValue = false)]
        public Player Player{ get; }
    
        /// <summary>
        /// Formats a QuickJoinRequest into a string of key-value pairs for use as a path parameter.
        /// </summary>
        /// <returns>Returns a string representation of the key-value pairs.</returns>
        internal string SerializeAsPathParam()
        {
            var serializedModel = "";

            if (Filter != null)
            {
                serializedModel += "filter," + Filter.ToString() + ",";
            }
            if (Player != null)
            {
                serializedModel += "player," + Player.ToString();
            }
            return serializedModel;
        }

        /// <summary>
        /// Returns a QuickJoinRequest as a dictionary of key-value pairs for use as a query parameter.
        /// </summary>
        /// <returns>Returns a dictionary of string key-value pairs.</returns>
        internal Dictionary<string, string> GetAsQueryParam()
        {
            var dictionary = new Dictionary<string, string>();

            return dictionary;
        }
    }
}
